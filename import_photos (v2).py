import os
import pandas as pd
import requests
from concurrent.futures import ThreadPoolExecutor, as_completed

def download_file(url, filename):
    try:
        r = requests.get(url, timeout=15)
        if r.status_code == 200:
            with open(filename, "wb") as f:
                f.write(r.content)
            return True
        return False
    except:
        return False

def download_images_from_excel(file_path):
    print(f"\nüìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {file_path}")
    df = pd.read_excel(file_path, header=None)

    # –±–∞–∑–æ–≤–∞—è –ø–∞–ø–∫–∞ = –ø–∞–ø–∫–∞, –≥–¥–µ –ª–µ–∂–∏—Ç Excel
    base_folder = os.path.dirname(file_path)

    tasks = []
    for idx, row in df.iterrows():
    article = row[1]  # –∫–æ–ª–æ–Ω–∫–∞ B (–∞—Ä—Ç–∏–∫—É–ª)
    if pd.isna(article):
        continue  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫ —Å—Ç—Ä–æ–∫–µ –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ ".0" –∏ –ø—Ä–æ–±–µ–ª–æ–≤
    article = str(article).strip()
    if article.endswith(".0"):
        article = article[:-2]

    folder = os.path.join(base_folder, article)
    os.makedirs(folder, exist_ok=True)

        for i, col in enumerate([2, 3, 4, 5, 6], start=1):
            url = row[col]
            if pd.notna(url):
                filename = os.path.join(folder, f"{article}_{i}.jpg")
                tasks.append((url, filename))

    total = len(tasks)
    print(f"üîé –ù–∞–π–¥–µ–Ω–æ {total} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")

    completed = 0
    with ThreadPoolExecutor(max_workers=8) as executor:
        future_to_task = {executor.submit(download_file, url, filename): (url, filename) for url, filename in tasks}

        for future in as_completed(future_to_task):
            url, filename = future_to_task[future]
            completed += 1
            percent = (completed / total) * 100
            try:
                result = future.result()
                if result:
                    print(f"[{percent:.1f}%] ‚úÖ –°–∫–∞—á–∞–Ω–æ: {filename}")
                else:
                    print(f"[{percent:.1f}%] ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è {url}")
            except Exception as e:
                print(f"[{percent:.1f}%] ‚ùå –û—à–∏–±–∫–∞ {url}: {e}")

    print(f"üéâ –ì–æ—Ç–æ–≤–æ! –°–∫–∞—á–∞–Ω–æ {completed} –∏–∑ {total} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.")

if __name__ == "__main__":
    excel_files = [
        r"C:\Users\3prokent\Documents\Python\–∫–æ–∫–æ—à–Ω–∏–∫–∏\data(–∫–æ–∫–æ—à–Ω–∏–∫–∏).xlsx",
        r"C:\Users\3prokent\Documents\Python\—Ö–æ—Ö–ª–æ–º–∞\data(—Ö–æ—Ö–ª–æ–º–∞).xlsx",
    ]

    for file in excel_files:
        download_images_from_excel(file)